@charset "UTF-8";
/*
***** CSS Variables (Custom Properties) *****

CSS variables, also known as custom properties, allow you to store values that you can reuse throughout your CSS. They are especially useful for maintaining consistency in your design and for making it easier to update styles across your entire site.

---- Declaration and Usage ----
CSS variables are declared using the -- prefix and are accessed using the var() function.

Advantages of Custom Properties:

1. No need for preprocessing:
    CSS variables do not require a preprocessor and work natively in the browser.

2. Can be used in JavaScript:
    CSS variables can be dynamically read and modified using JavaScript, allowing for real-time updates.

3. Inheritable:
    CSS variables inherit their values, making it easier to manage styles across different elements.

4. Responsive to media queries:
    CSS variables can change values within media queries without the need to create new variables, unlike in SCSS.

5. Natively supported by modern browsers:
    CSS variables are supported by modern browsers, eliminating compatibility issues.

***** The :root pseudo-class selector *****

---- Why use the :root pseudo-class selector? ----

The :root pseudo-class represents the highest-level parent of the document (i.e., the <html> element). Declaring your CSS variables in :root makes them globally accessible throughout your entire stylesheet. This is the best practice because it ensures the variables are available for use in any part of your CSS.

In HTML, :root represents the <html> element and is identical to the selector html , except that its specificity is higher. This means that variables defined in :root can override those defined in the html selector, ensuring they are applied more consistently across your stylesheets.

Using :root is a clearer indication of intent to future developers reading the code, signaling that the variables defined there are meant to be global.

The CSS Custom Properties (CSS Variables) specification specifically recommends using :root for defining global variables. This establishes a best practice and consistency across projects and teams.
*/
:root {
  /* **************** COLOURS **************** */
  --color-primary: #eb2f64;
  --color-primary-light: #ff3366;
  --color-primary-dark: #ba265d;
  --color-grey-light-1: #fefefe;
  --color-grey-light-2: #f3f3f3;
  --color-grey-light-3: #ebebeb;
  --color-grey-light-4: #ccc;
  --color-grey-light-5: #b8b8b8;
  --color-grey-dark-1: #999;
  --color-grey-dark-2: #777;
  --color-grey-dark-3: #333;
  --shadow-dark: 0 1rem 4rem 1rem rgba(0, 0, 0, 0.25);
  --line: 1px solid var(--color-grey-light-2);
  --default-comp-pad: 2.4rem;
  --gap-details: 3.2rem;
}

.btn-inline {
  display: flex;
  border: none;
  font-size: inherit;
  color: var(--color-primary);
  background-color: transparent;
  border-bottom: 1px solid;
  align-self: center;
  padding-bottom: 2px;
  transition: all 0.2s;
}
.btn-inline:hover {
  cursor: pointer;
  color: var(--color-dark-grey-3);
}
.btn-inline:hover > span {
  margin-left: 1rem;
}
.btn-inline span {
  margin-left: 0.3rem;
  transition: margin-left 0.2s;
}

/* Global Resets */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
  box-sizing: border-box;
}
@media only screen and (min-width: 112.5em) {
  html {
    font-size: 75%;
  }
}
@media only screen and (max-width: 56.25em) {
  html {
    font-size: 56.25%;
  }
}
@media only screen and (max-width: 50em) {
  html {
    font-size: 50%;
  }
}

body {
  font-family: "Open Sans", sans-serif;
  font-weight: 400;
  line-height: 1.5;
  font-size: 1.4rem;
  color: var(--color-grey-dark-2);
  background-image: linear-gradient(to right bottom, var(--color-primary-light), var(--color-primary-dark));
  min-height: 100vh;
}

.heading-primary {
  font-size: 2.4rem;
  font-weight: 300;
  letter-spacing: 0.2rem;
  text-transform: uppercase;
}
@media only screen and (max-width: 62.5em) {
  .heading-primary {
    font-size: 2.2rem;
  }
}
@media only screen and (max-width: 37.5em) {
  .heading-primary {
    width: 100%;
  }
}

.heading-secondary {
  font-size: 2rem;
  font-weight: 300;
  text-transform: uppercase;
}
@media only screen and (max-width: 62.5em) {
  .heading-secondary {
    font-size: 1.8rem;
  }
}

.heading-tertiary {
  font-size: 1.8rem;
  font-weight: 300;
  text-transform: uppercase;
}
@media only screen and (max-width: 62.5em) {
  .heading-tertiary {
    font-size: 1.6rem;
  }
}

/* 
***********************************************
Gallery styling
*********************************************** 
*/
.gallery {
  display: flex;
}
.gallery__photo {
  width: 100%;
  display: block;
}

/* 
***********************************************
Overview styling
*********************************************** 
*/
.overview {
  display: flex;
  align-items: center;
}
@media only screen and (max-width: 37.5em) {
  .overview {
    flex-direction: column;
  }
  .overview > *:not(:last-child) {
    padding: var(--default-comp-pad);
  }
}
.overview__heading {
  margin-left: 2.4rem;
}
@media only screen and (max-width: 37.5em) {
  .overview__heading {
    flex: 1 100%;
  }
}
.overview__stars {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.4rem;
  margin-right: auto;
  margin-left: 2.4rem;
}
@media only screen and (max-width: 37.5em) {
  .overview__stars {
    margin: 0;
  }
}
.overview__stars-item {
  width: 1.6rem;
  height: 1.6rem;
  fill: var(--color-primary);
}
.overview__container-location {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 2.4rem;
}
.overview__location {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1.6rem;
}
.overview__location-icon {
  width: 1.6rem;
  height: 1.6rem;
  fill: var(--color-primary);
}
.overview__location-text {
  font-size: 1.2rem;
  color: var(--color-primary);
  background-color: transparent;
  border: none;
  position: relative;
  cursor: pointer;
  transition: all 0.2s;
}
.overview__location-text::after {
  content: "";
  position: absolute;
  top: 1.7rem;
  left: 50%;
  background-color: currentColor;
  height: 1px;
  width: 120%;
  transform: translateX(-50%);
}
.overview__location-text:hover {
  color: var(--color-grey-dark-3);
}
.overview__score {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  background-color: var(--color-primary);
  padding: 1.2rem 1.6rem;
}
.overview__score-average {
  color: var(--color-grey-light-1);
  font-size: 2.4rem;
}
.overview__score-votes {
  color: var(--color-grey-light-1);
  text-transform: uppercase;
  font-size: 1rem;
}

/* 
***********************************************
Hotel details section stylings
*********************************************** 
*/
.features {
  flex: 0 0 60%;
  background-color: #fff;
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  padding: var(--default-comp-pad);
  gap: var(--gap-details);
}

.feature__description {
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
}
.feature__description-text {
  text-align: justify;
  line-height: 1.7;
}
.feature__list {
  list-style: none;
  display: flex;
  flex-wrap: wrap;
  padding: 3.2rem 0;
  border-top: var(--line);
  border-bottom: var(--line);
}
.feature__item {
  flex: 0 0 50%;
  position: relative;
  margin-bottom: 0.8rem;
}
.feature__item::before {
  content: "";
  margin-right: 0.8rem;
  height: 1rem;
  width: 1rem;
  display: inline-block;
  -webkit-mask-image: url(../../img/chevron-thin-right.svg);
          mask-image: url(../../img/chevron-thin-right.svg);
  background-color: var(--color-primary);
  -webkit-mask-size: cover;
          mask-size: cover;
}
.feature__recommendations {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1.6rem;
}
.feature__recommendations-text {
  font-size: 1.2rem;
  text-align: justify;
}
.feature__recommendations-avatars {
  display: flex;
  flex-wrap: nowrap;
}
.feature__recommendations-photo {
  height: 4rem;
  width: 4rem;
  border-radius: 100px;
  border: 3px solid #fff;
}
@media only screen and (max-width: 43.75em) {
  .feature__recommendations-photo {
    height: 4.8rem;
    width: 4.8rem;
  }
}
.feature__recommendations-photo:not(:last-child) {
  margin-right: -2rem;
}

.reviews {
  display: flex;
  flex-direction: column;
  gap: var(--gap-details);
}

.review {
  position: relative;
  background-color: #fff;
  display: flex;
  flex-direction: column;
  gap: 2.4rem;
  padding: var(--default-comp-pad);
}
.review::before {
  content: "â€œ";
  font-size: 20rem;
  font-family: sans-serif;
  color: var(--color-grey-light-2);
  position: absolute;
  top: -7.7rem;
  left: -0.5rem;
}
.review__header {
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
  position: relative;
}
.review__text {
  position: relative;
}
.review__footer {
  display: flex;
  justify-content: space-between;
}
.review__left-side {
  display: flex;
  gap: 1.2rem;
  align-items: center;
}
.review__photo {
  height: 4rem;
  width: 4rem;
  border-radius: 100px;
}
@media only screen and (max-width: 43.75em) {
  .review__photo {
    height: 4.8rem;
    width: 4.8rem;
  }
}
.review__name {
  text-transform: uppercase;
  font-weight: 600;
  font-size: 1.2rem;
}
.review__date {
  font-size: 1rem;
  color: var(--color-grey-dark-1);
}
.review__rating {
  font-size: 2.4rem;
  font-weight: 300;
  color: var(--color-primary);
  display: flex;
  align-items: center;
}

/* 
***********************************************
CTA styling
*********************************************** 
*/
.cta {
  padding: 4rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 3.2rem;
}
.cta .btn {
  border: none;
  font-size: 1.6rem;
  font-weight: 300;
  background-image: linear-gradient(to right, var(--color-primary-light) 0%, var(--color-primary) 33%, var(--color-primary-dark) 67%);
  text-transform: uppercase;
  color: #fff;
  padding: 2.4rem 8rem;
  border-radius: 100px;
  position: relative;
  overflow: hidden;
  transition: all 0.2s;
}
.cta .btn::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to right, var(--color-primary-dark) 0%, var(--color-primary) 33%, var(--color-primary-light) 67%);
  opacity: 0;
  transition: opacity 0.3s ease;
}
.cta .btn:hover::before {
  opacity: 1;
}
.cta .btn-visible {
  display: inline-block;
  transition: all 0.2s;
}
.cta .btn-invisible {
  position: absolute;
  top: -100%;
  display: inline-block;
  left: 50%;
  transform: translateX(-50%);
  width: 100%;
  transition: all 0.2s;
}
.cta .btn:hover .btn-visible {
  transform: translateY(220%);
}
.cta .btn:hover .btn-invisible {
  top: 50%;
  transform: translate(-50%, -50%);
}

/* 
***********************************************
Layout stylings
*********************************************** 
*/
.layout__main {
  max-width: 120rem;
  background-color: #fff;
  box-shadow: var(--shadow-dark);
  margin: 8rem auto;
}
@media only screen and (max-width: 75em) {
  .layout__main {
    margin: 0;
  }
}
.layout__nav-hotel {
  display: flex;
}
@media only screen and (max-width: 56.25em) {
  .layout__nav-hotel {
    flex-direction: column;
  }
}
.layout__hotel {
  flex: 1 0;
  /*
  flex: 1 breakdown

  flex-grow: 1: The flex item can grow to take up any available space in the flex container. The 1 value means it will take up a proportion of the available space relative to other flex items with a flex-grow value.

  flex-shrink: 1: The flex item can shrink if necessary to fit into the container. The 1 value means it will shrink in proportion to other flex items with a flex-shrink value.

  flex-basis: 0%: The initial size of the flex item before space is distributed according to flex-grow and flex-shrink. A 0 value means the item will start with zero width and grow based on the remaining space.
  */
}
.layout__hotel-details {
  display: flex;
  background-color: var(--color-grey-light-2);
  justify-content: space-around;
  padding: 2.4rem;
  gap: 3.2rem;
}
@media only screen and (max-width: 37.5em) {
  .layout__hotel-details {
    flex-direction: column;
  }
}

/* 
***********************************************
Header styling
*********************************************** 
*/
.header {
  height: 8rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid var(--color-grey-light-3);
}

.logo {
  height: 3.6rem;
  margin-left: 2.4rem;
}
.logo:hover {
  animation: enlarge-and-shrink 0.7s;
  cursor: pointer;
}

@keyframes enlarge-and-shrink {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  80% {
    transform: scale(0.9);
  }
}
.search {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 0 0 40%;
}
.search__input {
  font-family: inherit;
  color: inherit;
  background-color: var(--color-grey-light-2);
  border-style: none;
  width: 90%;
  padding: 1rem 2rem;
  border-radius: 50px;
  transition: all 0.2s;
}
.search__input:focus {
  background-color: var(--color-grey-light-3);
  outline: none;
  width: 100%;
}
.search__input::-moz-placeholder {
  font-weight: 100;
  color: var(--color-grey-light-4);
}
.search__input::placeholder {
  font-weight: 100;
  color: var(--color-grey-light-4);
}
.search__button {
  background-color: transparent;
  width: 1.6rem;
  border-style: none;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-left: -3rem;
}
.search__icon {
  width: 1.6rem;
  height: 1.6rem;
  fill: var(--color-grey-dark-1);
}

.user-nav {
  display: flex;
  height: 100%;
}
.user-nav__icon-container {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 6.4rem;
  transition: all 0.2s;
  cursor: pointer;
}
.user-nav__icon-container:hover, .user-nav__icon-container:active {
  background-color: var(--color-grey-light-2);
}
.user-nav__icon {
  height: 2.2rem;
  width: 2.2rem;
  fill: var(--color-grey-dark-2);
}
.user-nav__notification {
  position: absolute;
  right: 20%;
  top: 25%;
  display: flex;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--color-primary);
  color: #fff;
  font-size: 1rem;
  width: 1.7rem;
  height: 1.7rem;
  border-radius: 50%;
}
.user-nav__profile {
  display: flex;
  padding: 0 2.4rem;
  gap: 1.2rem;
  display: flex;
  justify-content: center;
  align-items: center;
}
.user-nav__profile:hover, .user-nav__profile:active {
  background-color: var(--color-grey-light-2);
  cursor: pointer;
}
.user-nav__profile-photo {
  height: 4rem;
  width: 4rem;
  border-radius: 100px;
}
@media only screen and (max-width: 43.75em) {
  .user-nav__profile-photo {
    height: 4.8rem;
    width: 4.8rem;
  }
}

/* 
***********************************************
Sidebar styling
*********************************************** 
*/
.sidebar {
  background-color: var(--color-grey-dark-3);
  flex: 0 0 18%;
  flex-direction: column;
  display: flex;
  justify-content: space-between;
}
.sidebar__nav {
  margin-top: 2.4rem;
}
@media only screen and (max-width: 56.25em) {
  .sidebar__nav {
    display: flex;
    margin: 0;
    justify-content: space-evenly;
  }
}
.sidebar__item {
  list-style: none;
  position: relative;
}
@media only screen and (max-width: 56.25em) {
  .sidebar__item {
    flex: 1 auto;
    display: flex;
    justify-content: center;
  }
}
.sidebar__item::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  background-color: var(--color-primary);
  width: 3px;
  height: 100%;
  transform: scaleY(0);
  transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s, background-color 0.1s;
}
.sidebar__item:hover::before {
  width: 100%;
  transform: scaleY(1);
}
.sidebar__link:link, .sidebar__link:visited {
  display: flex;
  text-decoration: none;
  color: var(--color-grey-light-1);
  padding: 1.6rem 3.2rem;
  position: relative;
  z-index: 10;
  align-items: center;
  gap: 2.4rem;
}
@media only screen and (max-width: 62.5em) {
  .sidebar__link:link, .sidebar__link:visited {
    padding: 1.6rem 2.4rem;
  }
}
@media only screen and (max-width: 56.25em) {
  .sidebar__link:link, .sidebar__link:visited {
    gap: 1.2rem;
  }
}
@media only screen and (max-width: 37.5em) {
  .sidebar__link:link, .sidebar__link:visited {
    padding: 1.2rem 2.4rem;
  }
}
.sidebar__icon {
  fill: currentColor;
  display: inline-block;
  height: 1.6rem;
  width: 1.6rem;
}
.sidebar__text {
  text-transform: uppercase;
}
@media only screen and (max-width: 68.75em) {
  .sidebar__text {
    font-size: 1.2rem;
  }
}
.sidebar__footer {
  color: var(--color-grey-light-1);
  padding: 3.2rem;
  font-size: 1.2rem;
  text-align: center;
}
@media only screen and (max-width: 56.25em) {
  .sidebar__footer {
    display: none;
  }
}