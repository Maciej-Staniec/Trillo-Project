/* 
***********************************************
Layout stylings
*********************************************** 
*/
// Base layout container styles
.layout {
  // Main content styling
  &__main {
    max-width: 120rem; // Sets a maximum width to ensure content does not stretch too wide on larger screens.
    background-color: #fff;
    box-shadow: var(
      --shadow-dark
    ); // Applies a dark shadow for 3D effect, enhancing the layer's visual separation from the background.
    margin: 8rem auto; // Centers the main content horizontally and gives it vertical spacing from the top of the web browser display window.
  }

  // Container spanning the sidebar and the hotel content (excluding the header)
  &__nav-hotel {
    display: flex; // Uses flexbox ensuring a flexible and adaptive layout.
  }

  // Main container for hotel content
  &__hotel {
    // display: flex;
    flex: 1 0;
    /*
  flex: 1 breakdown

  flex-grow: 1: The flex item can grow to take up any available space in the flex container. The 1 value means it will take up a proportion of the available space relative to other flex items with a flex-grow value.

  flex-shrink: 1: The flex item can shrink if necessary to fit into the container. The 1 value means it will shrink in proportion to other flex items with a flex-shrink value.

  flex-basis: 0%: The initial size of the flex item before space is distributed according to flex-grow and flex-shrink. A 0 value means the item will start with zero width and grow based on the remaining space.
  */
  }

  // Container for hotel reviews
  &__hotel-details {
    display: flex; // Also uses flexbox to provide a consistent, aligned structure for reviews.
    background-color: var(
      --color-grey-light-2
    ); // Sets a light grey background to differentiate the review section from other content areas.
    justify-content: space-around;
    padding: 2.4rem;
    gap: 3.2rem;
  }
}

/* 
***********************************************
Header styling
*********************************************** 
*/
.header {
  height: 8rem; // Sets a fixed height of 8rem for the header.
  display: flex; // Enables flexbox layout to align child elements horizontally.
  justify-content: space-between; // Distributes space between child elements.
  align-items: center; // Vertically aligns child elements in the center.
  border-bottom: 1px solid var(--color-grey-light-3); // Adds a light grey border at the bottom.
}

// Styling for the logo within the header.
.logo {
  height: 3.6rem;
  margin-left: 2.4rem; // Adds a left margin to space out the logo from the content.
  &:hover {
    // Defines hover state styles for the logo.
    animation: enlarge-and-shrink 0.7s; // Applies a scaling animation on hover.
    cursor: pointer; // Changes the cursor to indicate clickable item.
  }
}

// Defines the keyframe animation for the logo on hover.
@keyframes enlarge-and-shrink {
  0%,
  100% {
    transform: scale(1); // Logo starts and ends at its original scale.
  }
  50% {
    transform: scale(
      1.2
    ); // Logo scales up to 1.2 times its size midway through the animation.
  }
  80% {
    transform: scale(
      0.9
    ); // Logo scales down to 0.9 times its size before finishing.
  }
}

// Styling for the search input and button container.
.search {
  @include flexbox-center; // Centers children flex items.
  flex: 0 0 40%; // Flex basis of 40% with no growth or shrink.

  &__input {
    font-family: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border-style: none; // No border for the input.
    width: 90%; // Input width is 90% of its container.
    padding: 1rem 2rem; // Padding around the text inside the input box.
    border-radius: 50px; // Rounded corners with a radius of 50px.
    transition: all 0.2s; // Smooth transition for all properties over 0.2 seconds.
    &:focus {
      // Styles when the input is focused.
      background-color: var(
        --color-grey-light-3
      ); // Darker grey background on focus.
      outline: none; // Removes the outline to clean up the focus state.
      width: 100%; // Expands to full width when focused.
    }
    &::placeholder {
      // Styling for the placeholder text.
      font-weight: 100;
      color: var(--color-grey-light-4);
    }
  }

  &__button {
    background-color: transparent; // Transparent background for the button.
    width: 1.6rem; // Fixed width for the button.
    border-style: none; // No border for the button.
    @include flexbox-center; // Center alignment for the icon inside the button.
    margin-left: -3rem; // Negative margin to overlap with the input.
  }

  &__icon {
    width: 1.6rem;
    height: 1.6rem;
    fill: var(--color-grey-dark-1);
  }
}

// Styling for the user navigation area.
.user-nav {
  display: flex; // Enables flexbox layout.
  height: 100%; // Full height of the parent container for all elements.

  &__icon-container {
    @include flexbox-center; // Centers the icon horizontally and vertically.
    position: relative; // Position relative for absolute positioning of child elements.
    width: 6.4rem; // Fixed width for the icon container.
    transition: all 0.2s; // Smooth transition for all properties over 0.2 seconds.
    cursor: pointer; // Changes the cursor to indicate clickable item.
    &:hover,
    &:active {
      // Hover and active state styles.
      background-color: var(
        --color-grey-light-2
      ); // Light grey background on hover/active.
    }
  }

  &__icon {
    height: 2.2rem; // Fixed height for the icon.
    width: 2.2rem; // Fixed width for the icon.
    fill: var(--color-grey-dark-2); // Slightly darker grey color for the icon.
  }

  // Notification badge styling within the icon container.
  &__notification {
    position: absolute; // Absolutely positioned within the icon container.
    right: 20%; // Positioned 20% from the right edge.
    top: 25%; // Positioned 25% from the top.
    display: flex; // flex layout to center content.
    @include flexbox-center; // Centers content inside the notification badge.
    background-color: var(
      --color-primary
    ); // primary color for high visibility.
    color: #fff;
    font-size: 1rem;
    width: 1.7rem; // Diameter of the circular badge.
    height: 1.7rem; // Height matches the width to create a circle.
    border-radius: 50%; // Fully rounded corners to form a circle.
  }

  // Styling for the user profile section.
  &__profile {
    display: flex; // Flex layout to align items.
    padding: 0 2.4rem; // Padding on both sides.
    gap: 1.2rem; // Space between child elements.
    @include flexbox-center; // Center alignment for children.
    &:hover,
    &:active {
      // Hover and active state styles.
      background-color: var(
        --color-grey-light-2
      ); // Light grey background on hover/active.
      cursor: pointer; // Changes the cursor to indicate clickable item.
    }
    &-photo {
      // User profile photo styling.
      @include avatar-styling;
    }
  }
}

/* 
***********************************************
Sidebar styling
*********************************************** 
*/

.sidebar {
  background-color: var(--color-grey-dark-3);
  flex: 0 0 18%; // The sidebar is non-flexible, with a fixed width of 18% of its container.
  flex-direction: column; // Stacks child elements vertically.
  display: flex;
  justify-content: space-between; // Spaces child elements vertically from top to bottom.

  // Styles for the navigation container within the sidebar.
  &__nav {
    margin-top: 2.4rem; // Adds top margin to space the nav from any elements above it.
  }

  // Styles for individual navigation items within the sidebar.
  &__item {
    list-style: none; // Removes default list styling.
    position: relative; // Positioned relative for absolutely positioned pseudo-elements.

    // Pseudo-element for decorative purposes before each nav item.
    &::before {
      content: ""; // Necessary for the pseudo-element to display.
      position: absolute; // Positioned relative to the parent item.
      top: 0; // Aligns to the top of the parent item.
      left: 0; // Aligns to the left of the parent item.
      background-color: var(--color-primary);
      width: 3px; // Initial thin line style of the decoration on animation.
      height: 100%; // Full height of the parent item.
      transform: scaleY(0); // Initially scaled to 0, invisible vertically.
      transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s,
        background-color 0.1s; // Animates transformations and color change.
    }

    // Expands the before pseudo-element (decoration of the selected link) on hover to fill the item's width and becomes fully visible.
    &:hover::before {
      width: 100%; // Expands to the full width of the parent item.
      transform: scaleY(1); // Scales back to full visibility.
    }
  }

  // Styling links within the sidebar for both unvisited and visited states.
  &__link:link,
  &__link:visited {
    display: flex; // Displays content in a flex row.
    text-decoration: none; // No underlines on the link.
    color: var(--color-grey-light-1);
    padding: 1.6rem 3.2rem; // Padding around the text for better clickability.
    position: relative; // Positioned relative for stacking context.
    z-index: 10; // Ensures it's on top of the animated highlight (::before element of the __item)
    align-items: center; // Centers items vertically within the link.
    gap: 2.4rem; // Spaces the text from the icon.
  }

  // Icon style within the link.
  &__icon {
    fill: currentColor; // Inherits the text color for the icon.
    display: inline-block; // Allows width and height to affect the element.
    height: 1.6rem; // Fixed height for the icon.
    width: 1.6rem; // Fixed width for the icon.
  }

  // Styling for the text within each link, making it uppercase for visual distinction.
  &__text {
    text-transform: uppercase; // Enhances visibility and style.
  }

  // Styles for the sidebar footer
  &__footer {
    color: var(--color-grey-light-1); // Light grey color for footer text.
    padding: 3.2rem; // Padding around the footer text for spacing.
    font-size: 1.2rem; // Smaller font size for less emphasis.
    text-align: center; // Centers text horizontally within the footer.
  }
}
