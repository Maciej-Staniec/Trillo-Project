/* 
***********************************************
Gallery styling
*********************************************** 
*/

.gallery {
  display: flex; // Use flexbox to layout gallery items horizontally
  // Make images responsive
  &__photo {
    width: 100%; // Ensure the image takes the full width of its container
    display: block; // Display as a block element
    @include respond-to("mobile-600") {
      &--2,
      &--3 {
        display: none; // Hide the 2nd and 3rd images on screens smaller than 600px
      }
    }
  }
}

/* 
***********************************************
Overview styling
*********************************************** 
*/
.overview {
  display: flex; // Use flexbox to align child elements horizontally
  align-items: center; // Vertically align items in the center
  justify-content: space-between; // Distribute space between items
  border-bottom: 1px solid var(--color-grey-light-3); // Add a bottom border

  @include respond-to("mobile-600") {
    flex-direction: column; // Stack elements vertically on mobile screens
    & > *:not(:last-child) {
      padding: var(--default-comp-pad); // Add padding to all but the last child
    }
  }
  &__heading {
    display: flex; // Use flexbox for child elements
    gap: 1.6rem; // Add space between children
    margin-left: 2.4rem; // Add left margin
    @include respond-to("mobile-600") {
      margin: 0; // Remove margin on mobile screens
    }
  }

  &__stars {
    @include flexbox-center; // Center children using flexbox
    gap: 0.4rem; // Add gap between star icons
    @include respond-to("mobile-600") {
      margin: 0; // Remove margin on mobile screens
    }

    &-item {
      width: 1.6rem; // Set width for the star icons
      height: 1.6rem; // Set height for the star icons
      fill: var(--color-primary); // Fill star icons with the primary color
    }
  }

  &__container-location {
    @include flexbox-center; // Center children using flexbox
    gap: 2.4rem; // Add gap between location elements

    @include respond-to("mobile-600") {
      gap: 9.6rem; // Increase gap on mobile screens
      padding-bottom: var(--default-comp-pad); // Add bottom padding
    }
  }

  &__location {
    @include flexbox-center; // Center children using flexbox
    gap: 1.6rem; // Add gap between location icon and text
    &-icon {
      width: 1.6rem; // Set width for the location icon
      height: 1.6rem; // Set height for the location icon
      fill: var(
        --color-primary
      ); // Fill the location icon with the primary color
    }

    &-text {
      font-size: 1.2rem; // Set font size for the location text
      color: var(--color-primary); // Set text color to primary color
      background-color: transparent; // Transparent background
      border: none; // No border
      position: relative; // Position relative for pseudo-element
      cursor: pointer; // Change cursor to pointer on hover
      transition: all 0.2s; // Smooth transition for all properties
      &::after {
        content: ""; // Empty content for the pseudo-element
        position: absolute; // Position absolute for the pseudo-element
        top: 1.7rem; // Position from the top
        left: 50%; // Center horizontally
        background-color: currentColor; // Use current text color
        height: 1px; // Set height for the underline
        width: 120%; // Set width for the underline
        transform: translateX(-50%); // Center the underline
      }
      &:hover {
        color: var(--color-grey-dark-3); // Change color on hover
      }
    }
  }
  &__score {
    @include flexbox-center; // Center children using flexbox
    flex-direction: column; // Stack children vertically
    color: var(--color-grey-light-1); // Set text color
    background-color: var(--color-primary); // Set background color
    padding: 1.2rem 1.6rem; // Add padding
    @include respond-to("mobile-600") {
      background-color: #fff; // Change background color on mobile screens
      color: var(--color-primary); // Change text color on mobile screens
      justify-content: flex-end; // Align items to the end
      padding: 0; // Remove padding
    }
    &-average {
      font-size: 2.4rem; // Set font size for the average score
    }

    &-votes {
      text-transform: uppercase; // Uppercase text
      font-size: 1rem; // Set font size for the votes
    }
  }
}

/* 
***********************************************
Hotel details section stylings
*********************************************** 
*/

// Features styling

.features {
  flex: 0 0 60%; // Set flex basis and prevent shrinking
  background-color: #fff; // White background color
  display: flex; // Use flexbox
  justify-content: space-between; // Distribute space between children
  flex-direction: column; // Stack children vertically
  padding: var(--default-comp-pad); // Add padding
  gap: var(--gap-details); // Add gap between children
}
.feature {
  &__description {
    display: flex; // Use flexbox
    flex-direction: column; // Stack children vertically
    gap: 1.2rem; // Add gap between paragraphs
    &-text {
      text-align: justify; // Justify text
      line-height: 1.7; // Set line height for better readability
    }
  }
  &__list {
    list-style: none; // Remove default list styling
    display: flex; // Use flexbox
    flex-wrap: wrap; // Allow wrapping of list items
    padding: 3.2rem 0; // Add vertical padding
    border-top: var(--line); // Add top border
    border-bottom: var(--line); // Add bottom border
  }

  &__item {
    flex: 0 0 50%; // Set flex basis and prevent shrinking
    position: relative; // Position relative for pseudo-element
    margin-bottom: 0.8rem; // Add bottom margin

    &::before {
      content: ""; // Empty content for the pseudo-element
      margin-right: 0.8rem; // Add right margin
      height: 1rem; // Set height
      width: 1rem; // Set width
      display: inline-block; // Display as an inline block
      mask-image: url(../../img/chevron-thin-right.svg); // Use SVG mask
      background-color: var(--color-primary); // Set background color
      mask-size: cover; // Cover the entire element
    }
  }

  &__recommendations {
    display: flex; // Use flexbox
    justify-content: space-between; // Distribute space between children
    align-items: center; // Align items vertically in the center
    gap: 1.6rem; // Add gap between elements
    &-text {
      font-size: 1.2rem; // Set font size
      text-align: justify; // Justify text
    }

    &-avatars {
      display: flex; // Use flexbox
      flex-wrap: nowrap; // Prevent wrapping of avatars
    }
    &-photo {
      @include avatar-styling; // Apply avatar styling mixin
      border: 3px solid #fff; // Add white border
      &:not(:last-child) {
        margin-right: -2rem; // Overlap avatars
      }
    }
  }
}

// Reviews styling
.reviews {
  display: flex; // Use flexbox
  flex-direction: column; // Stack children vertically
  gap: var(--gap-details); // Add gap between reviews
  // align-items: center;
}

.review {
  position: relative; // Position relative for pseudo-elements
  background-color: #fff; // White background color
  display: flex; // Use flexbox
  flex-direction: column; // Stack children vertically
  gap: 2.4rem; // Add gap between elements
  padding: var(--default-comp-pad); // Add padding
  &::before {
    content: "\201C"; // Add a quotation mark
    font-size: 20rem; // Set font size for the quotation mark
    font-family: sans-serif; // Set font family for the quotation mark
    color: var(--color-grey-light-2); // Set color for the quotation mark
    position: absolute; // Position absolute for the quotation mark
    top: -7.7rem; // Position from the top
    left: -0.5rem; // Position from the left
  }

  &__header {
    display: flex; // Use flexbox
    flex-direction: column; // Stack children vertically
    gap: 1.2rem; // Add gap between header elements
    position: relative; // Position relative
  }

  &__text {
    position: relative; // Position relative
  }

  &__footer {
    display: flex; // Use flexbox
    justify-content: space-between; // Space elements evenly in the footer
  }

  &__left-side {
    display: flex; // Use flexbox
    gap: 1.2rem; // Add gap between elements
    align-items: center; // Align items vertically in the center
  }

  &__photo {
    @include avatar-styling; // Apply avatar styling mixin
  }

  &__name {
    text-transform: uppercase; // Uppercase text
    font-weight: 600; // Set font weight
    font-size: 1.2rem; // Set font size for the name
  }

  &__date {
    font-size: 1rem; // Set font size for the date
    color: var(--color-grey-dark-1); // Set text color for the date
  }

  &__rating {
    font-size: 2.4rem; // Set font size for the rating
    font-weight: 300; // Set font weight
    color: var(--color-primary); // Set text color for the rating
    display: flex; // Use flexbox
    align-items: center; // Align rating vertically in the center
  }
}

/* 
***********************************************
CTA styling
*********************************************** 
*/
.cta {
  padding: 4rem; // Add padding to the CTA section
  display: flex; // Use flexbox
  flex-direction: column; // Stack children vertically
  align-items: center; // Center-align children
  gap: 3.2rem; // Add gap between elements

  &__heading {
    text-align: center; // Center-align the heading text
  }

  .btn {
    border: none; // Remove border
    font-size: 1.6rem; // Set font size
    font-weight: 300; // Set font weight
    background-image: linear-gradient(
      to right,
      var(--color-primary-light) 0%,
      var(--color-primary) 33%,
      var(--color-primary-dark) 67%
    ); // Set background gradient
    text-transform: uppercase; // Uppercase text
    color: #fff; // Set text color to white
    padding: 2.4rem 8rem; // Add padding
    border-radius: 100px; // Round the corners
    position: relative; // Position relative for pseudo-elements
    overflow: hidden; // Hide overflow
    transition: all 0.2s; // Smooth transition for all properties

    &::before {
      content: ""; // Empty content for the pseudo-element
      position: absolute; // Position absolute
      top: 0; // Position from the top
      left: 0; // Position from the left
      width: 100%; // Full width
      height: 100%; // Full height
      background-image: linear-gradient(
        to right,
        var(--color-primary-dark) 0%,
        var(--color-primary) 33%,
        var(--color-primary-light) 67%
      ); // Set background gradient
      opacity: 0; // Initially invisible
      transition: opacity 0.3s ease; // Smooth transition for opacity
    }
    &:hover::before {
      opacity: 1; // Show gradient overlay on hover
    }

    &-visible {
      display: inline-block; // Display as inline-block
      transition: all 0.2s; // Smooth transition for all properties
    }
    &-invisible {
      position: absolute; // Position absolute
      top: -100%; // Position off-screen initially
      display: inline-block; // Display as inline-block
      left: 50%; // Center horizontally
      transform: translateX(-50%); // Center the element
      width: 100%; // Full width
      transition: all 0.2s; // Smooth transition for all properties
    }

    &:hover .btn-visible {
      transform: translateY(220%); // Move visible text out of view on hover
    }

    &:hover .btn-invisible {
      top: 50%; // Move to the middle vertically on hover
      transform: translate(-50%, -50%); // Center the element
    }
  }
}
